{"version":3,"file":"mobx-react-router.min.js","sources":["../node_modules/@babel/runtime/helpers/esm/defineProperty.js","../node_modules/@babel/runtime/helpers/esm/objectSpread2.js","../node_modules/@babel/runtime/helpers/esm/createClass.js","../node_modules/path-to-regexp/dist.es2015/index.js","../src/index.ts","../node_modules/@babel/runtime/helpers/esm/classCallCheck.js"],"sourcesContent":["export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import defineProperty from \"./defineProperty.js\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n\n  return target;\n}","function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nexport default function _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  Object.defineProperty(Constructor, \"prototype\", {\n    writable: false\n  });\n  return Constructor;\n}","/**\n * Tokenize input string.\n */\nfunction lexer(str) {\n    var tokens = [];\n    var i = 0;\n    while (i < str.length) {\n        var char = str[i];\n        if (char === \"*\" || char === \"+\" || char === \"?\") {\n            tokens.push({ type: \"MODIFIER\", index: i, value: str[i++] });\n            continue;\n        }\n        if (char === \"\\\\\") {\n            tokens.push({ type: \"ESCAPED_CHAR\", index: i++, value: str[i++] });\n            continue;\n        }\n        if (char === \"{\") {\n            tokens.push({ type: \"OPEN\", index: i, value: str[i++] });\n            continue;\n        }\n        if (char === \"}\") {\n            tokens.push({ type: \"CLOSE\", index: i, value: str[i++] });\n            continue;\n        }\n        if (char === \":\") {\n            var name = \"\";\n            var j = i + 1;\n            while (j < str.length) {\n                var code = str.charCodeAt(j);\n                if (\n                // `0-9`\n                (code >= 48 && code <= 57) ||\n                    // `A-Z`\n                    (code >= 65 && code <= 90) ||\n                    // `a-z`\n                    (code >= 97 && code <= 122) ||\n                    // `_`\n                    code === 95) {\n                    name += str[j++];\n                    continue;\n                }\n                break;\n            }\n            if (!name)\n                throw new TypeError(\"Missing parameter name at \" + i);\n            tokens.push({ type: \"NAME\", index: i, value: name });\n            i = j;\n            continue;\n        }\n        if (char === \"(\") {\n            var count = 1;\n            var pattern = \"\";\n            var j = i + 1;\n            if (str[j] === \"?\") {\n                throw new TypeError(\"Pattern cannot start with \\\"?\\\" at \" + j);\n            }\n            while (j < str.length) {\n                if (str[j] === \"\\\\\") {\n                    pattern += str[j++] + str[j++];\n                    continue;\n                }\n                if (str[j] === \")\") {\n                    count--;\n                    if (count === 0) {\n                        j++;\n                        break;\n                    }\n                }\n                else if (str[j] === \"(\") {\n                    count++;\n                    if (str[j + 1] !== \"?\") {\n                        throw new TypeError(\"Capturing groups are not allowed at \" + j);\n                    }\n                }\n                pattern += str[j++];\n            }\n            if (count)\n                throw new TypeError(\"Unbalanced pattern at \" + i);\n            if (!pattern)\n                throw new TypeError(\"Missing pattern at \" + i);\n            tokens.push({ type: \"PATTERN\", index: i, value: pattern });\n            i = j;\n            continue;\n        }\n        tokens.push({ type: \"CHAR\", index: i, value: str[i++] });\n    }\n    tokens.push({ type: \"END\", index: i, value: \"\" });\n    return tokens;\n}\n/**\n * Parse a string for the raw tokens.\n */\nexport function parse(str, options) {\n    if (options === void 0) { options = {}; }\n    var tokens = lexer(str);\n    var _a = options.prefixes, prefixes = _a === void 0 ? \"./\" : _a;\n    var defaultPattern = \"[^\" + escapeString(options.delimiter || \"/#?\") + \"]+?\";\n    var result = [];\n    var key = 0;\n    var i = 0;\n    var path = \"\";\n    var tryConsume = function (type) {\n        if (i < tokens.length && tokens[i].type === type)\n            return tokens[i++].value;\n    };\n    var mustConsume = function (type) {\n        var value = tryConsume(type);\n        if (value !== undefined)\n            return value;\n        var _a = tokens[i], nextType = _a.type, index = _a.index;\n        throw new TypeError(\"Unexpected \" + nextType + \" at \" + index + \", expected \" + type);\n    };\n    var consumeText = function () {\n        var result = \"\";\n        var value;\n        // tslint:disable-next-line\n        while ((value = tryConsume(\"CHAR\") || tryConsume(\"ESCAPED_CHAR\"))) {\n            result += value;\n        }\n        return result;\n    };\n    while (i < tokens.length) {\n        var char = tryConsume(\"CHAR\");\n        var name = tryConsume(\"NAME\");\n        var pattern = tryConsume(\"PATTERN\");\n        if (name || pattern) {\n            var prefix = char || \"\";\n            if (prefixes.indexOf(prefix) === -1) {\n                path += prefix;\n                prefix = \"\";\n            }\n            if (path) {\n                result.push(path);\n                path = \"\";\n            }\n            result.push({\n                name: name || key++,\n                prefix: prefix,\n                suffix: \"\",\n                pattern: pattern || defaultPattern,\n                modifier: tryConsume(\"MODIFIER\") || \"\"\n            });\n            continue;\n        }\n        var value = char || tryConsume(\"ESCAPED_CHAR\");\n        if (value) {\n            path += value;\n            continue;\n        }\n        if (path) {\n            result.push(path);\n            path = \"\";\n        }\n        var open = tryConsume(\"OPEN\");\n        if (open) {\n            var prefix = consumeText();\n            var name_1 = tryConsume(\"NAME\") || \"\";\n            var pattern_1 = tryConsume(\"PATTERN\") || \"\";\n            var suffix = consumeText();\n            mustConsume(\"CLOSE\");\n            result.push({\n                name: name_1 || (pattern_1 ? key++ : \"\"),\n                pattern: name_1 && !pattern_1 ? defaultPattern : pattern_1,\n                prefix: prefix,\n                suffix: suffix,\n                modifier: tryConsume(\"MODIFIER\") || \"\"\n            });\n            continue;\n        }\n        mustConsume(\"END\");\n    }\n    return result;\n}\n/**\n * Compile a string to a template function for the path.\n */\nexport function compile(str, options) {\n    return tokensToFunction(parse(str, options), options);\n}\n/**\n * Expose a method for transforming tokens into the path function.\n */\nexport function tokensToFunction(tokens, options) {\n    if (options === void 0) { options = {}; }\n    var reFlags = flags(options);\n    var _a = options.encode, encode = _a === void 0 ? function (x) { return x; } : _a, _b = options.validate, validate = _b === void 0 ? true : _b;\n    // Compile all the tokens into regexps.\n    var matches = tokens.map(function (token) {\n        if (typeof token === \"object\") {\n            return new RegExp(\"^(?:\" + token.pattern + \")$\", reFlags);\n        }\n    });\n    return function (data) {\n        var path = \"\";\n        for (var i = 0; i < tokens.length; i++) {\n            var token = tokens[i];\n            if (typeof token === \"string\") {\n                path += token;\n                continue;\n            }\n            var value = data ? data[token.name] : undefined;\n            var optional = token.modifier === \"?\" || token.modifier === \"*\";\n            var repeat = token.modifier === \"*\" || token.modifier === \"+\";\n            if (Array.isArray(value)) {\n                if (!repeat) {\n                    throw new TypeError(\"Expected \\\"\" + token.name + \"\\\" to not repeat, but got an array\");\n                }\n                if (value.length === 0) {\n                    if (optional)\n                        continue;\n                    throw new TypeError(\"Expected \\\"\" + token.name + \"\\\" to not be empty\");\n                }\n                for (var j = 0; j < value.length; j++) {\n                    var segment = encode(value[j], token);\n                    if (validate && !matches[i].test(segment)) {\n                        throw new TypeError(\"Expected all \\\"\" + token.name + \"\\\" to match \\\"\" + token.pattern + \"\\\", but got \\\"\" + segment + \"\\\"\");\n                    }\n                    path += token.prefix + segment + token.suffix;\n                }\n                continue;\n            }\n            if (typeof value === \"string\" || typeof value === \"number\") {\n                var segment = encode(String(value), token);\n                if (validate && !matches[i].test(segment)) {\n                    throw new TypeError(\"Expected \\\"\" + token.name + \"\\\" to match \\\"\" + token.pattern + \"\\\", but got \\\"\" + segment + \"\\\"\");\n                }\n                path += token.prefix + segment + token.suffix;\n                continue;\n            }\n            if (optional)\n                continue;\n            var typeOfMessage = repeat ? \"an array\" : \"a string\";\n            throw new TypeError(\"Expected \\\"\" + token.name + \"\\\" to be \" + typeOfMessage);\n        }\n        return path;\n    };\n}\n/**\n * Create path match function from `path-to-regexp` spec.\n */\nexport function match(str, options) {\n    var keys = [];\n    var re = pathToRegexp(str, keys, options);\n    return regexpToFunction(re, keys, options);\n}\n/**\n * Create a path match function from `path-to-regexp` output.\n */\nexport function regexpToFunction(re, keys, options) {\n    if (options === void 0) { options = {}; }\n    var _a = options.decode, decode = _a === void 0 ? function (x) { return x; } : _a;\n    return function (pathname) {\n        var m = re.exec(pathname);\n        if (!m)\n            return false;\n        var path = m[0], index = m.index;\n        var params = Object.create(null);\n        var _loop_1 = function (i) {\n            // tslint:disable-next-line\n            if (m[i] === undefined)\n                return \"continue\";\n            var key = keys[i - 1];\n            if (key.modifier === \"*\" || key.modifier === \"+\") {\n                params[key.name] = m[i].split(key.prefix + key.suffix).map(function (value) {\n                    return decode(value, key);\n                });\n            }\n            else {\n                params[key.name] = decode(m[i], key);\n            }\n        };\n        for (var i = 1; i < m.length; i++) {\n            _loop_1(i);\n        }\n        return { path: path, index: index, params: params };\n    };\n}\n/**\n * Escape a regular expression string.\n */\nfunction escapeString(str) {\n    return str.replace(/([.+*?=^!:${}()[\\]|/\\\\])/g, \"\\\\$1\");\n}\n/**\n * Get the flags for a regexp from the options.\n */\nfunction flags(options) {\n    return options && options.sensitive ? \"\" : \"i\";\n}\n/**\n * Pull out keys from a regexp.\n */\nfunction regexpToRegexp(path, keys) {\n    if (!keys)\n        return path;\n    var groupsRegex = /\\((?:\\?<(.*?)>)?(?!\\?)/g;\n    var index = 0;\n    var execResult = groupsRegex.exec(path.source);\n    while (execResult) {\n        keys.push({\n            // Use parenthesized substring match if available, index otherwise\n            name: execResult[1] || index++,\n            prefix: \"\",\n            suffix: \"\",\n            modifier: \"\",\n            pattern: \"\"\n        });\n        execResult = groupsRegex.exec(path.source);\n    }\n    return path;\n}\n/**\n * Transform an array into a regexp.\n */\nfunction arrayToRegexp(paths, keys, options) {\n    var parts = paths.map(function (path) { return pathToRegexp(path, keys, options).source; });\n    return new RegExp(\"(?:\" + parts.join(\"|\") + \")\", flags(options));\n}\n/**\n * Create a path regexp from string input.\n */\nfunction stringToRegexp(path, keys, options) {\n    return tokensToRegexp(parse(path, options), keys, options);\n}\n/**\n * Expose a function for taking tokens and returning a RegExp.\n */\nexport function tokensToRegexp(tokens, keys, options) {\n    if (options === void 0) { options = {}; }\n    var _a = options.strict, strict = _a === void 0 ? false : _a, _b = options.start, start = _b === void 0 ? true : _b, _c = options.end, end = _c === void 0 ? true : _c, _d = options.encode, encode = _d === void 0 ? function (x) { return x; } : _d;\n    var endsWith = \"[\" + escapeString(options.endsWith || \"\") + \"]|$\";\n    var delimiter = \"[\" + escapeString(options.delimiter || \"/#?\") + \"]\";\n    var route = start ? \"^\" : \"\";\n    // Iterate over the tokens and create our regexp string.\n    for (var _i = 0, tokens_1 = tokens; _i < tokens_1.length; _i++) {\n        var token = tokens_1[_i];\n        if (typeof token === \"string\") {\n            route += escapeString(encode(token));\n        }\n        else {\n            var prefix = escapeString(encode(token.prefix));\n            var suffix = escapeString(encode(token.suffix));\n            if (token.pattern) {\n                if (keys)\n                    keys.push(token);\n                if (prefix || suffix) {\n                    if (token.modifier === \"+\" || token.modifier === \"*\") {\n                        var mod = token.modifier === \"*\" ? \"?\" : \"\";\n                        route += \"(?:\" + prefix + \"((?:\" + token.pattern + \")(?:\" + suffix + prefix + \"(?:\" + token.pattern + \"))*)\" + suffix + \")\" + mod;\n                    }\n                    else {\n                        route += \"(?:\" + prefix + \"(\" + token.pattern + \")\" + suffix + \")\" + token.modifier;\n                    }\n                }\n                else {\n                    route += \"(\" + token.pattern + \")\" + token.modifier;\n                }\n            }\n            else {\n                route += \"(?:\" + prefix + suffix + \")\" + token.modifier;\n            }\n        }\n    }\n    if (end) {\n        if (!strict)\n            route += delimiter + \"?\";\n        route += !options.endsWith ? \"$\" : \"(?=\" + endsWith + \")\";\n    }\n    else {\n        var endToken = tokens[tokens.length - 1];\n        var isEndDelimited = typeof endToken === \"string\"\n            ? delimiter.indexOf(endToken[endToken.length - 1]) > -1\n            : // tslint:disable-next-line\n                endToken === undefined;\n        if (!strict) {\n            route += \"(?:\" + delimiter + \"(?=\" + endsWith + \"))?\";\n        }\n        if (!isEndDelimited) {\n            route += \"(?=\" + delimiter + \"|\" + endsWith + \")\";\n        }\n    }\n    return new RegExp(route, flags(options));\n}\n/**\n * Normalize the given path string, returning a regular expression.\n *\n * An empty array can be passed in for the keys, which will hold the\n * placeholder key descriptions. For example, using `/user/:id`, `keys` will\n * contain `[{ name: 'id', delimiter: '/', optional: false, repeat: false }]`.\n */\nexport function pathToRegexp(path, keys, options) {\n    if (path instanceof RegExp)\n        return regexpToRegexp(path, keys);\n    if (Array.isArray(path))\n        return arrayToRegexp(path, keys, options);\n    return stringToRegexp(path, keys, options);\n}\n//# sourceMappingURL=index.js.map","/* eslint-disable no-param-reassign */\nimport type { History, Listener, To, Update } from 'history'\nimport { Action } from 'history'\nimport { action, computed, makeObservable, observable } from 'mobx'\nimport { match } from 'path-to-regexp'\n\ntype UnregisterCallback = ReturnType<History['listen']>\n\nconst join = (...paths: string[]) =>\n  paths.reduce((prev, curr) => `${prev.replace(/\\/$/, '')}/${curr.replace(/^\\//, '')}`)\n\nexport class RouterStore {\n  public pathList: string[] = []\n\n  public state: Update = {\n    action: Action.Pop,\n    location: {\n      key: 'default',\n      pathname: '',\n      search: '',\n      state: {},\n      hash: '',\n    },\n  }\n\n  /** @readonly */\n  public get location(): Update['location'] {\n    return this.state.location\n  }\n\n  constructor(readonly history: History, readonly basePath?: string) {\n    this.go = history.go.bind(history)\n    this.back = history.back.bind(history)\n    this.forward = history.forward.bind(history)\n\n    makeObservable(this, {\n      state: observable,\n      location: computed,\n      query: computed,\n      pathList: observable,\n      hashValue: computed,\n      pathValue: computed,\n      appendPathList: action,\n      prependPathList: action,\n    })\n\n\n    /**\n     * Listen for changes to location state in store\n     * and run listener at once\n     */\n    this.subscribe = listener => {\n      const unlisten = history.listen(listener)\n\n      listener({\n        action: history.action,\n        location: history.location,\n      })\n\n      return unlisten\n    }\n\n    this.stopSyncWithHistory = this.subscribe(this.updateState)\n  }\n\n  push(to: To, state?: any) {\n    this.history.push(this.addBasename(to), state)\n  }\n\n  replace(to: To, state?: any) {\n    this.history.replace(this.addBasename(to), state)\n  }\n\n  public go: History['go']\n\n  public back: History['back']\n\n  public forward: History['forward']\n\n\n  public updateState = action((newState: Update) => {\n    const pathname = this.basePath ? newState.location.pathname.replace(this.basePath, '') : newState.location.pathname\n\n    this.state = {\n      action: newState.action,\n      location: {\n        ...newState.location,\n        pathname\n      },\n    }\n  })\n\n  /**\n   * get query format from location.search\n   * @readonly\n   * */\n  public get query(): Record<string, any> {\n    const { search } = this.location\n    const query: Record<string, any> = {}\n    if (search) {\n      const searchParam = new URLSearchParams(search)\n      searchParam.forEach((value, name) => {\n        if (query[name]) {\n          if (Array.isArray(query[name])) {\n            query[name].push(value)\n          } else {\n            query[name] = [query[name], value]\n          }\n        } else {\n          query[name] = value\n        }\n      })\n    }\n    return query\n  }\n\n  /**\n   * get hash, not include '#'\n   * @readonly\n   * */\n  public get hashValue(): any {\n    const { hash } = this.location\n    if (hash) {\n      return hash.slice(1)\n    }\n    return ''\n  }\n\n  /**\n   * get path variable value, example:\n   * /path/:name => /path/abc\n   * router.pathValue.name => ac\n   *\n   * @readonly\n   * */\n  public get pathValue(): Record<string, string> {\n    const { pathname } = this.location\n    let param = {}\n    let hasPathValue = false\n    this.pathList.find(path => {\n      const matchResult = match(path!, { decode: decodeURIComponent })(pathname)\n      if (matchResult && matchResult) {\n        param = matchResult.params\n        hasPathValue = true\n      }\n      return hasPathValue\n    })\n    return param\n  }\n\n  /**\n   * append new path to router.pathList, like '/abc/:name'\n   * Note: the pathList order will affect pathValue\n   * */\n  public appendPathList(...pathList: string[]): void {\n    this.pathList.push(...pathList)\n  }\n\n  /**\n   * preppend new path to router.pathList, like '/abc/:name'\n   * Note: the pathList order will affect pathValue\n   * */\n  public prependPathList(...pathList: string[]): void {\n    this.pathList.unshift(...pathList)\n  }\n\n  subscribe: (listener: Listener) => UnregisterCallback\n\n  stopSyncWithHistory: UnregisterCallback\n\n  private addBasename(to: To): To {\n    if (!this.basePath) return to\n    if (typeof to === 'string') {\n      if (!to.startsWith(this.basePath)) {\n        return join(this.basePath, to)\n      }\n    } else if (to.pathname && !to.pathname.startsWith(this.basePath)) {\n      to.pathname = join(this.basePath, to.pathname)\n    }\n\n    return to\n  }\n}\n","export default function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}"],"names":["_defineProperty","obj","key","value","Object","defineProperty","enumerable","configurable","writable","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","push","apply","_objectSpread2","target","i","arguments","length","source","forEach","getOwnPropertyDescriptors","defineProperties","_defineProperties","props","descriptor","parse","str","options","tokens","char","type","index","count","pattern","j","TypeError","name","code","charCodeAt","lexer","_a","prefixes","defaultPattern","escapeString","delimiter","result","path","tryConsume","mustConsume","undefined","nextType","consumeText","prefix","indexOf","suffix","modifier","name_1","pattern_1","match","re","decode","x","pathname","m","exec","params","create","_loop_1","split","map","regexpToFunction","pathToRegexp","replace","flags","sensitive","stringToRegexp","strict","_b","start","_c","end","_d","encode","endsWith","route","_i","tokens_1","token","mod","endToken","isEndDelimited","RegExp","tokensToRegexp","groupsRegex","execResult","regexpToRegexp","Array","isArray","paths","parts","join","arrayToRegexp","_len","_key","reduce","prev","curr","concat","RouterStore","history","basePath","_this","this","instance","Constructor","_classCallCheck","pathList","state","action","Action","Pop","location","search","hash","go","back","forward","updateState","newState","_objectSpread","subscribe","stopSyncWithHistory","bind","makeObservable","observable","computed","query","hashValue","pathValue","appendPathList","prependPathList","listener","unlisten","listen","protoProps","staticProps","get","to","addBasename","URLSearchParams","slice","param","hasPathValue","find","matchResult","decodeURIComponent","_this$pathList","_this$pathList2","unshift","startsWith","prototype"],"mappings":"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"}